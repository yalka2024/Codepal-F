# CodePal Platform - Load Testing Configuration
# Tool: Artillery
# Target: 10,000+ concurrent users
# Duration: 5 minutes per scenario

config:
  target: 'https://api.codepal.ai'
  phases:
    # Ramp-up phase
    - duration: 60
      arrival_rate: 100
      name: "Ramp up to 100 users"
    
    # Sustained load phase
    - duration: 180
      arrival_rate: 200
      name: "Sustained load at 200 users"
    
    # Peak load phase
    - duration: 120
      arrival_rate: 500
      name: "Peak load at 500 users"
    
    # Stress test phase
    - duration: 60
      arrival_rate: 1000
      name: "Stress test at 1000 users"
  
  # HTTP settings
  http:
    timeout: 30
    pool: 10
    headers:
      Content-Type: 'application/json'
      User-Agent: 'CodePal-LoadTest/1.0'
  
  # Plugin configuration
  plugins:
    metrics-by-endpoint: {}
    expect: {}
    http: {}

# Test scenarios
scenarios:
  # User authentication flow
  - name: "User Authentication"
    weight: 20
    flow:
      - post:
          url: "/api/auth/register"
          json:
            email: "{{ $randomEmail() }}"
            password: "TestPassword123!"
            firstName: "{{ $randomString() }}"
            lastName: "{{ $randomString() }}"
          capture:
            - json: "$.accessToken"
              as: "token"
          expect:
            - statusCode: 201
            - contentType: json
      
      - post:
          url: "/api/auth/login"
          json:
            email: "{{ $randomEmail() }}"
            password: "TestPassword123!"
          expect:
            - statusCode: 200
            - contentType: json

  # Agent management flow
  - name: "Agent Management"
    weight: 30
    flow:
      - get:
          url: "/api/agents"
          headers:
            Authorization: "Bearer {{ token }}"
          expect:
            - statusCode: 200
            - contentType: json
      
      - post:
          url: "/api/agents/action"
          headers:
            Authorization: "Bearer {{ token }}"
          json:
            type: "predict_performance"
            params:
              code: "console.log('Hello World');"
              platform: "web"
          expect:
            - statusCode: 200
            - contentType: json
            - hasProperty: "success"
            - equals: ["$.success", true]

  # Code collaboration flow
  - name: "Code Collaboration"
    weight: 25
    flow:
      - post:
          url: "/api/projects"
          headers:
            Authorization: "Bearer {{ token }}"
          json:
            name: "Test Project {{ $randomString() }}"
            description: "Load test project"
            language: "javascript"
          capture:
            - json: "$.id"
              as: "projectId"
          expect:
            - statusCode: 201
      
      - put:
          url: "/api/projects/{{ projectId }}/code"
          headers:
            Authorization: "Bearer {{ token }}"
          json:
            code: "function test() { return 'Hello World'; }"
            cursor: "{\"line\": 1, \"column\": 10}"
          expect:
            - statusCode: 200

  # Marketplace operations
  - name: "Marketplace Operations"
    weight: 15
    flow:
      - get:
          url: "/api/marketplace/snippets"
          expect:
            - statusCode: 200
            - contentType: json
      
      - post:
          url: "/api/marketplace/snippets"
          headers:
            Authorization: "Bearer {{ token }}"
          json:
            title: "Test Snippet {{ $randomString() }}"
            code: "const test = () => console.log('test');"
            language: "javascript"
            price: 5.00
          expect:
            - statusCode: 201

  # Analytics and metrics
  - name: "Analytics Endpoints"
    weight: 10
    flow:
      - get:
          url: "/api/analytics/user"
          headers:
            Authorization: "Bearer {{ token }}"
          expect:
            - statusCode: 200
            - contentType: json
      
      - get:
          url: "/api/analytics/project/{{ projectId }}"
          headers:
            Authorization: "Bearer {{ token }}"
          expect:
            - statusCode: 200

# Performance thresholds
ensure:
  # Response time thresholds
  maxErrorRate: 1
  maxResponseTime: 2000
  p95: 1000
  p99: 2000

# Custom functions
functions:
  # Generate random email
  randomEmail: |
    function() {
      return 'user' + Math.random().toString(36).substring(7) + '@example.com';
    }
  
  # Generate random string
  randomString: |
    function() {
      return Math.random().toString(36).substring(7);
    }

# Output configuration
output:
  # Console output
  stdout: {}
  
  # JSON report
  json:
    path: "./load-test-results.json"
  
  # HTML report
  html:
    path: "./load-test-report.html"

# Environment-specific configurations
environments:
  staging:
    target: 'https://staging-api.codepal.ai'
    phases:
      - duration: 30
        arrival_rate: 50
        name: "Staging test"
  
  production:
    target: 'https://api.codepal.ai'
    phases:
      - duration: 60
        arrival_rate: 100
        name: "Production baseline"
      - duration: 180
        arrival_rate: 200
        name: "Production load"
      - duration: 60
        arrival_rate: 500
        name: "Production stress"

# Monitoring integration
monitoring:
  # Datadog integration
  datadog:
    apiKey: "${DATADOG_API_KEY}"
    appKey: "${DATADOG_APP_KEY}"
  
  # Custom metrics
  custom:
    - name: "user_sessions"
      type: "counter"
    - name: "agent_predictions"
      type: "counter"
    - name: "code_updates"
      type: "counter" 